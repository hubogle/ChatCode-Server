// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameMessageBasic = "message_basic"

// MessageBasic mapped from table <message_basic>
type MessageBasic struct {
	ID          uint64 `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"`
	SenderID    uint64 `gorm:"column:sender_id;not null" json:"sender_id"`       // 发送者ID
	ReceiverID  uint64 `gorm:"column:receiver_id;not null" json:"receiver_id"`   // 接收者ID
	SessionType int32  `gorm:"column:session_type;not null" json:"session_type"` // 会话类型 1:群聊 2:私聊
	Content     string `gorm:"column:content;not null" json:"content"`           // 聊天内容
	ContentType int32  `gorm:"column:content_type;not null" json:"content_type"` // 聊天内容类型 1:文本 2:图片 3:视频 4:音频 5:文件
	SendAt      int64  `gorm:"column:send_at;not null" json:"send_at"`           // 发送时间
	CreatedAt   int64  `gorm:"column:created_at;not null" json:"created_at"`
	UpdatedAt   int64  `gorm:"column:updated_at;not null" json:"updated_at"`
	DeletedAt   *int64 `gorm:"column:deleted_at" json:"deleted_at"`
}

// IsEmpty determines whether the structure is empty
func (m *MessageBasic) IsEmpty() bool {
	if m == nil {
		return true
	}
	return m.ID == 0
}

// GetID get the ID of the database table
func (m *MessageBasic) GetID() int64 {
	return int64(m.ID)
}

// TableName MessageBasic's table name
func (*MessageBasic) TableName() string {
	return TableNameMessageBasic
}
