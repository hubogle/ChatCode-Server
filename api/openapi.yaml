openapi: 3.0.3
info:
  title: "ChatCode"
  version: "1.0.0"

paths:
  /ping:
    get:
      tags: [ping]
      summary: ping
      description: ping
      operationId: Ping
      x-group: ping
      responses:
        200:
          $ref: '#/components/responses/SuccessResp'

  /api/v1/login:
    post:
      tags: [oauth]
      summary: user login
      description: user login
      operationId: OauthLogin
      x-group: oauth
      requestBody:
        $ref: '#/components/requestBodies/LoginReq'
      responses:
        200:
          $ref: '#/components/responses/LoginResp'

  /api/v1/logout:
    post:
      tags: [oauth]
      summary: user logout
      description: user logout
      operationId: OauthLogout
      x-group: oauth
      responses:
        200:
          $ref: '#/components/responses/SuccessResp'

  /api/v1/home:
    get:
      tags: [home]
      summary: home page
      description: home page
      operationId: Home
      x-group: home
      responses:
        200:
          $ref: '#/components/responses/SuccessResp'

  /api/v1/room/{id}:
    get:
      tags: [room]
      summary: room get
      description: room get
      operationId: RoomGet
      x-group: room
      x-middleware: auth
      parameters:
        - name: id
          in: path
          description: room id
          required: true
          schema:
            type: integer
      responses:
        200:
          $ref: '#/components/responses/SuccessResp'

  /api/v1/room/create:
    post:
      tags: [room]
      summary: create room
      description: create room
      operationId: RoomCreate
      x-group: room
      x-middleware: auth
      requestBody:
        $ref: '#/components/requestBodies/RoomCreateReq'
      responses:
        200:
          $ref: '#/components/responses/RoomCreateResp'

  /api/v1/ws:
    get:
      tags: [ws]
      summary: websocket
      description: websocket chat
      operationId: ws
      x-group: ws
      responses:
        200:
          $ref: '#/components/responses/SuccessResp'

  /api/v1/chat/list:
    get:
      tags: [chat]
      summary: chat list
      description: chat list
      operationId: chatList
      x-group: chat
      x-middleware: auth
      responses:
        200:
          $ref: '#/components/responses/ChatListResp'

  /api/v1/chat/create:
    post:
      tags: [chat]
      summary: create chat
      description: create chat
      operationId: chatCreate
      x-group: chat
      x-middleware: auth
      requestBody:
        $ref: '#/components/requestBodies/ChatCreateReq'
      responses:
        200:
          $ref: '#/components/responses/SuccessResp'

  /api/v1/chat/message/list:
    get:
      tags: [chat]
      summary: chat message list
      description: chat message list
      operationId: chatMessage
      x-group: chat
      x-middleware: auth
      parameters:
        - name: type
          in: query
          description: 会话类型
          required: true
          schema:
            type: integer
        - name: uid
          in: query
          description: 会话id
          required: true
          schema:
            type: integer
            format: uint64
      responses:
        200:
          $ref: '#/components/responses/ChatMessageResp'

components:
  requestBodies:
    LoginReq:
      description: login request body
      content:
        application/json:
          schema:
            type: object
            properties:
              account:
                type: string
                description: 用户名
              password:
                type: string
                description: 密码
            required:
            - account
            - password

    RoomCreateReq:
      description: create room request body
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: 房间名称
              info:
                type: string
                description: 房间信息
              salt:
                type: string
                description: 房间密码
            required:
            - name

    ChatCreateReq:
      description: create chat request body
      content:
        application/json:
          schema:
            type: object
            properties:
              type:
                type: integer
                description: 会话类型
                enum: [1, 2]
              uid:
                type: integer
                format: uint64
                description: 会话id
              salt:
                type: string
                description: 会话密码
            required:
            - type
            - uid

  responses:
    LoginResp:
      description: 登录成功
      content:
        application/json:
          schema:
            description: 登录成功
            x-level-one: data
            allOf:
              - $ref: '#/components/schemas/CodeMessage'
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                    required:
                      - token

    ChatListResp:
      description: 会话列表
      content:
        application/json:
          schema:
            description: 会话列表
            x-level-one: data
            allOf:
              - $ref: '#/components/schemas/CodeMessage'
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      list:
                        type: array
                        items:
                          $ref: '#/components/schemas/ChatItemInfo'
                    required:
                      - list

    RoomCreateResp:
      description: 创建房间
      content:
        application/json:
          schema:
            description: 创建房间
            x-level-one: data
            allOf:
              - $ref: '#/components/schemas/CodeMessage'
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      room_id:
                        type: integer
                        format: uint64
                        description: 房间id
                    required:
                      - room_id

    SuccessResp:
      description: 请求成功
      content:
        application/json:
          x-ignore-schema: true
          schema:
            $ref: '#/components/schemas/CodeMessage'

    ChatMessageResp:
      description: 会话消息列表
      content:
        application/json:
          schema:
            description: 会话消息列表
            x-level-one: data
            allOf:
              - $ref: '#/components/schemas/CodeMessage'
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      list:
                        type: array
                        items:
                          $ref: '#/components/schemas/MessageItemInfo'
                    required:
                      - list
  schemas:
    CodeMessage:
      type: object
      properties:
        code:
          type: integer
          description: 状态码
        msg:
           type: string
           description: 状态信息
      required:
        - code
        - msg

    ChatItemInfo:
      type: object
      properties:
        type:
          type: integer
          description: 会话类型
          enum: [1, 2]
        name:
          type: string
          description: 会话名称
        uid:
          type: integer
          format: uint64
          description: 会话id
      required:
        - type
        - name
        - uid

    MessageItemInfo:
      type: object
      properties:
        type:
          type: integer
          description: 消息类型
          enum: [1, 2]
        content:
          type: string
          description: 消息内容
        uid:
          type: integer
          format: uint64
          description: 发送者id
        nickname:
          type: string
          description: 发送者昵称
        send_at:
          type: integer
          format: int64
          description: 发送时间
      required:
        - type
        - content
        - uid
        - nickname
        - send_at
